/**
 * reCAPTCHA Debug Helper
 * Script para depurar problemas con reCAPTCHA
 */

// Funci√≥n de depuraci√≥n para reCAPTCHA
function debugRecaptcha() {
    console.log('üîç === DEPURACI√ìN reCAPTCHA ===');
    
    // Verificar si el elemento existe
    const recaptchaElement = document.querySelector('.g-recaptcha');
    console.log('üìç Elemento .g-recaptcha encontrado:', recaptchaElement);
    
    if (recaptchaElement) {
        console.log('üìã Atributos del elemento:', {
            'data-sitekey': recaptchaElement.getAttribute('data-sitekey'),
            'data-rendered': recaptchaElement.getAttribute('data-rendered'),
            'innerHTML': recaptchaElement.innerHTML.length > 0 ? 'Tiene contenido' : 'Vac√≠o'
        });
    }
    
    // Verificar si grecaptcha est√° disponible
    console.log('üîß grecaptcha disponible:', typeof grecaptcha !== 'undefined');
    
    if (typeof grecaptcha !== 'undefined') {
        console.log('‚úÖ grecaptcha m√©todos disponibles:', {
            render: typeof grecaptcha.render,
            getResponse: typeof grecaptcha.getResponse,
            reset: typeof grecaptcha.reset
        });
    }
    
    // Verificar configuraci√≥n
    console.log('‚öôÔ∏è Configuraci√≥n actual:', window.RECAPTCHA_CONFIG);
    
    // Verificar errores de consola
    console.log('üìä Para ver errores de red, revisa la pesta√±a Network en DevTools');
}

// Ejecutar depuraci√≥n autom√°ticamente
setTimeout(debugRecaptcha, 2000); // Despu√©s de 2 segundos

// Tambi√©n permitir ejecuci√≥n manual
window.debugRecaptcha = debugRecaptcha;